#!/bin/bash

generate_conf_file() {
    export ORGANIZATIONAL_UNIT_NAME=$(cat db/nodetype)
    export SERIAL_NUMBER=$(cat db/nodeid)
    envsubst '$ORGANIZATIONAL_UNIT_NAME $SERIAL_NUMBER' \
             < root-ca.conf.template \
             > root-ca.conf
}

ask_for_aa_serial_numbber() {
    while read -p 'Enter your accounting authority prefix (8 hexadecimals): ' aa_prefix
    do
        if echo "$aa_prefix" | grep -E '^[0-9a-f]{8}$' > /dev/null; then
            break
        fi
        echo "An invalid accounting authority prefix has been entered."
    done
    echo $aa_prefix > db/nodeid
}

mkdir certs approved-requests db private 2> /dev/null
chmod 700 private
touch db/index

set -e

if [ ! -s db/serial ]; then
    openssl rand -hex 16  > db/serial
fi

if [ ! -s db/crlnumber ]; then
    echo 1001 > db/crlnumber
fi

if [ ! -s db/nodetype -o ! -s db/nodeid ]; then
    PS3="Specify the type of your Swaptacular node: "
    select opt in "Creditors agent" "Debtors agent" "Accounting authority"
    do
        case $opt in
            "Creditors agent")
                echo "Creditors Agents" > db/nodetype
                echo $(uuidgen) > db/nodeid
                break
                ;;
            "Debtors agent")
                echo "Debtors Agents" > db/nodetype
                echo $(uuidgen) > db/nodeid
                break
                ;;
            "Accounting authority")
                echo "Accounting Authorities" > db/nodetype
                ask_for_aa_serial_numbber
                break
                ;;
            *)
                echo "Invalid option $REPLY"
                ;;
        esac
    done
fi

if [ ! -s root-ca.conf ]; then
    generate_conf_file
fi

self_csr="approved-requests/$(cat db/nodeid).csr"

if [ ! -s private/root-ca.key ]; then
    rm -f root-ca.crt
    rm -f "$self_csr"
    openssl req -new \
            -config root-ca.conf \
            -out "$self_csr" \
            -keyout private/root-ca.key \
            -reqexts ca_ext
fi

if [ ! -s root-ca.crt ]; then
    echo
    echo "Creating a self-signed certificate for your root CA..."
    if [ ! -s "$self_csr" ]; then
        openssl req -new \
                -config root-ca.conf \
                -out "$self_csr" \
                -key private/root-ca.key \
                -reqexts ca_ext
    fi
    openssl ca -selfsign \
            -config root-ca.conf \
            -in "$self_csr" \
            -out root-ca.crt \
            -extensions ca_ext
    if [ ! -s root-ca.crt ]; then
        exit 1
    fi
    echo
    echo '***********************************************************************'
    echo '* IMPORTANT: You should use the certificate in the ./root-ca.crt      *'
    echo '*            file, as a trusted root certificate authority (CA) for   *'
    echo '*            your SSL connections with other Swaptacular nodes.       *'
    echo '***********************************************************************'
fi

if [ ! -s root-ca.csr ]; then
    echo
    echo 'Creating a CSR for setting up connections with other Swaptacular nodes...'
    openssl req -new \
            -config root-ca.conf \
            -out root-ca.csr \
            -key private/root-ca.key \
            -reqexts ca_ext_official
    openssl req \
            -in root-ca.csr \
            -text \
            -noout
    echo
    echo '***********************************************************************'
    echo '* IMPORTANT: You can use the above certificate signing request (saved *'
    echo '*            in the ./root-ca.csr file), to set up permanent          *'
    echo '*            authenticated connections with other Swaptacular nodes.  *'
    echo '***********************************************************************'
fi
